<project name = "phase01"
	 default = "run">

  <!-- A target is something that Ant can "build". Ant "builds" a
       target by executing a particular command. The target's contents
       determine just what Ant must do to build it.
       
       This comment shows the tag structure for comments in
       XML/xHTML. (Ant uses XML to specify how a project is built, how
       individual targets are built, and the values of particular
       properties used for running the various commands.) -->
  <target name = "run">
    <!-- This is a <javac> (a compiler) tag. The first thing to do for
         this target is to compile the .java files.

         srcdir is the "source directory", a relative path to where
         the source (.java) files live; destdir is the "destination
         directory", a relative path to where the compiled (.class)
         files will live. They can be specified as attributes of the
         javac tag (as below), as properties (as done in the Ant
         tutorial you ran), or as tags inside the <javac> tag (as
         classpath is in the <java> tag below). -->
    <javac srcdir = "." destdir = ".">
    </javac>

    <!-- This is a <java> (a run) tag. After completing tags that come
         before this one, this target requires the execution of java
         with some parameters. As mentioned above, the parameters to
         the tool being executed (java) are set with attributes,
         global properties, or tags within the <java> tag itself. 

         The classname parameter sets the name of the class to
         execute. If the class is inside of a package, the
         fully-qualified name is given. The classpath parameter
         determines what directories will be searched by jave in an
         attempt to find the classes needed to run the given class. We
         include "." because the files that Echo relies on are either
         standard in Java or in the current directory.
    -->
    <java classname = "Echo">
      <classpath>
	<pathelement location = "." />
      </classpath>
    </java>
  </target>
</project>

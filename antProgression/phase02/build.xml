<project name = "phase02"
	 default = "run">
  <!-- Move source and build directory names up to global
       properties. Permits using them in multiple targets. After a
       property is defined, ${property.name} is replaced with the
       named property's value. The two directories are locations in
       the file system so their values are set using the location
       attribute. -->
  <property name = "src.dir" location = "src" />
  <property name = "build.dir" location = "build" />

  <!-- Make a clean target so that we can clean up (delete) all build
       targets. -->
  <target name = "clean" description = "Delete all build targets">
    <delete dir = "${build.dir}" /> <!-- the build.dir property -->
  </target>

  <target name = "init" description = "Starting point for building">
    <mkdir dir = "${build.dir}" />
  </target>

  <!-- Split the <javac> and <java> steps to two different targets -->
  <target name = "compile" depends = "init" description = "Compile the program">
    <!-- Compile ALL java files found in or below the source
         directory, building the matching structure in the destination
         directory. -->
    <javac srcdir = "${src.dir}" destdir = "${build.dir}" />
  </target>

  <target name = "run" depends = "compile" description = "Run the program">
    <!-- The class name is fully qualified, using the package name as
         well as the class name. That is required to run a program in
         a package. The classpath is the ROOT of the build directory
         because additional classes are referred to by their fully
         qualified names in the import statements in the Java
         code. -->
    <java classname = "main.Echo">
      <classpath>
	<pathelement location = "${build.dir}" />
      </classpath>
    </java>
  </target>
</project>
